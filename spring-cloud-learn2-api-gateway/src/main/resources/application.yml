server:
  port: 8087

spring:
  application:
    # 指定服务名
    name: app-zuul-gateway
  # 开启从 spring cloud config 配置中心读取配置
#  cloud:
#    config:
#      name: service-zuul # 对应配置中心的应用名称，默认是本应用名，即 spring.application.name,该名称要和 git 中的配置一致
#      #uri: http://127.0.0.1:7788/
#      profile: dev # 对应配置服务中的 {profile}
#      label: master # 对应的分支
#      discovery:
#        enabled: true # 启用发现服务功能
#        service-id: microservice-config-server # 指定配置中心工程的名称

# 服务注册到 eureka 注册中心的地址
eureka:
  client:
    service-url:
      defaultZone: http://zpc:123456@127.0.0.1:8100/eureka/,http://zpc:123456@127.0.0.1:9100/eureka/
    # 因为该应用为服务提供者，是 eureka 的一个客户端，需要注册到注册中心
    register-with-eureka: true
    # 是否需要从 eureka 上检索服务
    fetch-registry: true
  instance:
    # 将自己的 ip 地址注册到 Eureka 服务中
    prefer-ip-address: true
    ip-address: 127.0.0.1
    # 指定实例 id
    instance-id: ${spring.application.name}###${server.port}

# 从配置中心加载配置
zuul:
  # 定义服务转发规则
  routes:
    # item-service 这个名字是任意写的
    item-service:
      # 匹配 item-service 的 url 路径请求 app-commodity 服务
      path: /item-service/**
      #url: http://127.0.0.1:8081 # 真正的微服务地址
      serviceid: app-commodity
    # 名字尽量和业务系统相关
    order-service:
      # 匹配 order-service 的 url 路径请求 app-order 服务
      path: /order-service/**
      # 指定 Eureka 注册中心的服务 id
      serviceid: app-order


# 开启所有端点，即开启所有监控接口
management:
  endpoints:
    web:
      exposure:
        include: "*"